diff a/FinalTopic/src/main/java/tw/gym/member/Controller/MemberController.java b/FinalTopic/src/main/java/tw/gym/member/Controller/MemberController.java	(rejected hunks)
<<<<<<< HEAD
@@ -180,13 +180,53 @@
 		memberService.update(memberBean);
 		return "redirect:/findAllMember";
 	}
+	
+	@GetMapping("/updateMember")
+	public String updateMemberProfile(Model model, HttpSession session) {
+		MemberBean memberBean =(MemberBean)session.getAttribute("loginUser");
+		model.addAttribute("memberBean", memberBean);
+		return "member/MemberUpdateNormal";
+	}
+	@PostMapping("/updateMember")
+	public String updateMemberProfileData(@ModelAttribute("memberBean") MemberBean memberBean, BindingResult bindingResult)
+			throws ParseException, IOException, SerialException, SQLException {
+		new MemberValidator().validate(memberBean, bindingResult);
 
+		MultipartFile picture = memberBean.getmPhoto();
+		byte[] b = picture.getBytes();
+		Blob blob = new SerialBlob(b);
+
+		String fileName = picture.getOriginalFilename();
+
+		String mineType = picture.getContentType();
+		memberBean.setMemberPhoto(blob);
+		memberBean.setFileName(fileName);
+		memberBean.setMemberPhotoMineType(mineType);
+		if (memberBean.getDeposite() == null) {
+			memberBean.setDeposite(0);
+		}
+		if (bindingResult.hasErrors()) {
+			return "member/MemberUpdateNormal";
+		}
+		memberService.update(memberBean);
+		return "redirect:/MemberProfile";
+	}
+	
 	@GetMapping("/deleteMember/{number}")
 	public String deleteMemberData(@PathVariable("number") Integer number) throws SQLException {
 		memberService.deleteById(number);
 		return "redirect:/member/findAllMember";
 	}
-
+//	
+//	@PostMapping("/updatePassword")
+//	public String updatePassword(Model model, HttpSession session) {
+//		MemberBean memberBean =(MemberBean)session.getAttribute("loginUser");
+//		if(memberBean.getPassword()==memberService.findByNumber(null))
+//		model.addAttribute("memberBean", memberBean);
+//		return "member/MemberUpdateNormal";
+//	}
+//	
+	
 	@InitBinder
 	public void initBinder(WebDataBinder binder, WebRequest request) {
 		// java.util.Date
=======
@@ -127,9 +127,7 @@
         model.addAttribute("memberBean", memberBean);
         return "member/ShowMemberDetail";
     }
-    
 
-    
     @GetMapping("/modifyMember/{number}")
     public String updateMember(Model model, @PathVariable Integer number) {
         MemberBean memberBean = memberService.findByNumber(number);
@@ -353,11 +351,13 @@
     }
 
     // Mark
-    @GetMapping("/cancelClass/{classId}")
-    public String cencelClass(@PathVariable Integer classId, Integer a,
+    @PostMapping("cancelClass")
+    @ResponseBody
+    public String cencelClass(@RequestParam(required = false, name = "classId") String classId,
             @SessionAttribute("loginUser") MemberBean mBean) {
-        memberService.deleteByClassId(classId, 0);
-        ClassBean cBean = claService.getClassById(classId);
+        Integer classIdd = Integer.parseInt(classId);
+        memberService.deleteByClassId(classIdd, 0);
+        ClassBean cBean = claService.getClassById(classIdd);
         String email = mBean.getEmail();
         String subject = "一對一課程取消預約成功通知信";
         String body = mBean.getName() + ",您好：" + "\n\n\n" + "您已成功取消預約課程，資訊如下：" + "\n\n" + "課程名稱：" + cBean.getClassName()
@@ -366,7 +366,12 @@
 
         emailSerive.sendEmail(email, subject, body);
 
-        return "redirect:/viewReservationClass";
+        if (cBean.getClassAvaliable() == 0) {
+
+            return "true";
+        } else {
+            return "false";
+        }
     }
 
     // Mark
@@ -395,14 +400,14 @@
     @ResponseBody
     public List<ClassBean> memberListAllClass(@SessionAttribute("loginUser") MemberBean mBean) {
         List<ClassBean> cBean = memberService.findByMemberId(mBean.getNumber());
-        
+
         return cBean;
     }
 
     // Mark
     @PostMapping("classReservationCheck")
     @ResponseBody
-    public ClassBean classReservationCheck(@RequestParam(required = false, name = "classConfirm") String classConfirm,
+    public String classReservationCheck(@RequestParam(required = false, name = "classConfirm") String classConfirm,
             @RequestParam(required = false, name = "classId") String classId,
             @SessionAttribute("loginUser") MemberBean mBean) {
         // System.out.println(classConfirm);
@@ -425,8 +430,12 @@
 
         emailSerive.sendEmail(email, subject, body);
 
-        return cBean;
+        if (cBean.getClassAvaliable() == 1) {
 
+            return "true";
+        } else {
+            return "false";
+        }
 
     }
 
@@ -517,4 +526,9 @@
         return re;
     }
 
+    @GetMapping("classIntroduction")
+    public String classIntroduction() {
+        return "/member/classIntroduction";
+    }
+
 }
>>>>>>> origin/ryan1208
